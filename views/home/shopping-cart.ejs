<%- include('../partials/header.ejs') %>

<body class="animsition">
<%- include('../partials/nav.ejs') %>



	<!-- Cart -->
	<div class="wrap-header-cart js-panel-cart">
		<div class="s-full js-hide-cart"></div>

		<div class="header-cart flex-col-l p-l-65 p-r-25">
			<div class="header-cart-title flex-w flex-sb-m p-b-8">
				<span class="mtext-103 cl2">
					Your Cart
				</span>

				<div class="fs-35 lh-10 cl2 p-lr-5 pointer hov-cl1 trans-04 js-hide-cart">
					<i class="zmdi zmdi-close"></i>
				</div>
			</div>
			
			<div class="header-cart-content flex-w js-pscroll">
				<ul class="header-cart-wrapitem w-full">
					<li class="header-cart-item flex-w flex-t m-b-12">
						<div class="header-cart-item-img">
							<img src="images/item-cart-01.jpg" alt="IMG">
						</div>

						<div class="header-cart-item-txt p-t-8">
							<a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
								White Shirt Pleat
							</a>

							<span class="header-cart-item-info">
								1 x $19.00
							</span>
						</div>
					</li>

					<li class="header-cart-item flex-w flex-t m-b-12">
						<div class="header-cart-item-img">
							<img src="images/item-cart-02.jpg" alt="IMG">
						</div>

						<div class="header-cart-item-txt p-t-8">
							<a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
								Converse All Star
							</a>

							<span class="header-cart-item-info">
								1 x $39.00
							</span>
						</div>
					</li>

					<li class="header-cart-item flex-w flex-t m-b-12">
						<div class="header-cart-item-img">
							<img src="images/item-cart-03.jpg" alt="IMG">
						</div>

						<div class="header-cart-item-txt p-t-8">
							<a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
								Nixon Porter Leather
							</a>

							<span class="header-cart-item-info">
								1 x $17.00
							</span>
						</div>
					</li>
				</ul>
				
				<div class="w-full">
					<div class="header-cart-total w-full p-tb-40">
						Total: $75.00
					</div>

					<div class="header-cart-buttons flex-w w-full">
						<a href="shoping-cart.html" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-r-8 m-b-10">
							View Cart
						</a>

						<a href="shoping-cart.html" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-b-10">
							Check Out
						</a>
					</div>
				</div>
			</div>
		</div>
	</div>


	
		

	<!-- Shoping Cart -->
	<form class="bg0 p-t-75 p-b-85 fall-top">
		<div class="container">
			<div class="row">
				<div class="col-sm-10 col-lg-7 col-xl-7 m-lr-auto m-b-50">
					<div class="main-container">
						<div class="header">
							<div class="mtext-109 cl2">Order Summary</div>
						</div>
						<% if (cart && cart.length > 0) { %>
							<% cart.forEach(item => { %>
								<div class="row-main" data-product-id="<%= item.id %>">
									<div class="close-icon">&times;</div>
									<div class="column-1"><img width="100%" src="/images/<%= item.productImage %>" alt="Product 1"></div>
									<div class="column-2">
										<span class="product-name"><%= item.productName %></span>
										<span class="product-metaData"><%= item.metaData %></span>
										<span class="product-color"><%= item.color %></span>
										
										<span class="product-image"><%= item.productImage %></span>
										<span class="product-id"><%= item.productId %></span>
										<span class="product-code"><%= item.productCode %></span>
										<span class="delivery-inside"><%= item.insideDhaka %></span>
										<span class="delivery-outside"><%= item.outsideDhaka %></span>
										
										<% 
										try {
											let metaData = JSON.parse(item.metaData);
											Object.keys(metaData).forEach(key => { %>
												<span><%= key.charAt(0).toUpperCase() + key.slice(1).toLowerCase() %>: <%= metaData[key] %></span>
											<% });
										} catch (error) {
											// Handle JSON parsing error if necessary
											console.error('Error parsing metaData JSON:', error);
										}
										%>
										
										<div class="size-204 flex-w flex-m">
											<span class="regularPrice"><%= item.sellingPrice %></span>
						
											<div class="wrap-num-product flex-w m-r-20">
												<div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m">
													<i class="fs-16 zmdi zmdi-minus"></i>
												</div>
						
												<input class="mtext-104 cl3 txt-center num-product quantity" type="number" name="num-product" value="<%= item.quantity %>">
						
												<div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m">
													<i class="fs-16 zmdi zmdi-plus"></i>
												</div>
											</div>
											<span>=</span> <span class="subTotalRegularPrice"><%= item.sellingPrice * item.quantity %></span>
										</div>
									</div>
								</div>
							<% }); %>
						<% } else { %>
							<p>No items in the cart</p>
						<% } %>
	
					
						<!-- Add more row-mains as needed -->
					</div>
				</div>
		
				<div class="col-sm-10 col-lg-5 col-xl-5 m-lr-auto m-b-50">
					<div class="header" style="padding: 5px 20px;">	
						<h4 class="mtext-109 cl2">
						Delivery Details
						</h4>
					</div>
	
					<div class="bor10 delivery-details" >			
						<div class="bor12 p-b-30">
							<div class="main-error" style="display: none;">
								<div class="show-error" >অনুগ্রহ করে আপনার নাম, ফোন এবং ঠিকানা লিখুন</div>
							</div>
							
							<div class="">
								<span class="stext-110 cl2">
									Billing Address:
								</span>
							</div>
							<div class="p-t-18 p-r-0-sm ">
									<div class="bor8 bg0 m-b-12">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="name" placeholder="আপনার নাম লিখুন">
									</div>
	
									<div class="bor8 bg0 m-b-12">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="phone" placeholder="আপনার মোবাইল নম্বর">
									</div>
	
									<div class="bor8 bg0 m-b-12">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="address" placeholder="আপনার ঠিকানা">
									</div>
									
									<div class="bor8 bg0 m-b-12">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="user-notes" placeholder="যদি কিছু বলার থাকে">
									</div>
									<div class="p-b-10 p-t-14">
										<span class="stext-110 cl2">
											Delivery:
										</span>
									</div>
		
									<div class="">
										<div class="flex" style="display: flex; flex-direction: row;align-items: center;">
											<label for="inside-dhaka">
											<input type="radio" name="delivery" id="inside" placeholder="আপনার ঠিকানা" value="60" checked>
											<span>ঢাকার ভিতরে ৫০টাকা</span>
											</label>	
										</div>
										<br>
										<div style="display: flex; flex-direction: row;align-items: center;">
											<label for="outside-dhaka">
											<input type="radio" name="delivery" id="outside" placeholder="আপনার ঠিকানা" value="120">
											<span>ঢাকার ভিতরে ৫০টাকা</span>
											</label>
										</div>
									</div>
								</div>
						</div>		
						<div class="bor12 flex-w flex-t bor12 p-t-18 p-b-13">
							<div class="size-208" style="width: 100%; display: flex; justify-content: space-between;">
								<span class="stext-110 cl2" style="text-align: right!important;">
									Sub total
								</span>
								<span class="mtext-110" id="subTotal">
									
								</span>
							</div><br><br>
	
							<div class="size-208" style="width: 100%; display: flex; justify-content: space-between;">
								<span class="stext-110 cl2" style="text-align: right!important;">
									Shipping:
								</span>
								<span class="mtext-110" id="shipping">
									0
								</span>
								<span id="free-delivery">Free Delivery</span>
							</div>
						</div>
						
						<div class="p-t-18 p-b-13" style="width: 100%;">
							<div class="size-208" style="width: 100%; display: flex; justify-content: space-between; ">
								<span class="stext-110 cl2" style="text-align: right!important;">
									Total Amount
								</span>
								<span class="mtext-110" id="total">
									
								</span>
							</div>
							<div class="">
								<div class="flex" style="display: flex; align-items: center;">
									<label for="cod">
									<input type="radio" name="payment" id="cod"  value="Cash On Delivery" checked>
									<span>Cash On Delivery</span>
									</label>	
								</div>
								<br>
								<div style="display: flex; align-items: center;">
									<label for="bkash" >
									<input type="radio" name="payment" id="bkash"  value="Bkash">
									<span>BKash</span>
									</label>
								</div>
							</div>
							<br><br>
							
						</div>
						
	
						
						<button id="submitOrder" class="flex-c-m stext-101 cl0 size-116 bg3 hov-btn3 p-lr-15 trans-04 pointer" style="border-radius: 10px;">
							Place Order
						</button>
					</div>
				</div>
			</div>
		</div>
	</form>
		
	<a href="thank-you.html">thank you</a>
		

	<!-- Footer -->
	<footer class="bg3 p-t-75 p-b-32">
		<div class="container">
			<div class="row">
				<div class="col-sm-6 col-lg-3 p-b-50">
					<h4 class="stext-301 cl0 p-b-30">
						Categories
					</h4>

					<ul>
						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Women
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Men
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Shoes
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Watches
							</a>
						</li>
					</ul>
				</div>

				<div class="col-sm-6 col-lg-3 p-b-50">
					<h4 class="stext-301 cl0 p-b-30">
						Help
					</h4>

					<ul>
						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Track Order
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Returns 
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Shipping
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								FAQs
							</a>
						</li>
					</ul>
				</div>

				<div class="col-sm-6 col-lg-3 p-b-50">
					<h4 class="stext-301 cl0 p-b-30">
						GET IN TOUCH
					</h4>

					<p class="stext-107 cl7 size-201">
						Any questions? Let us know in store at 8th floor, 379 Hudson St, New York, NY 10018 or call us on (+1) 96 716 6879
					</p>

					<div class="p-t-27">
						<a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
							<i class="fa fa-facebook"></i>
						</a>

						<a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
							<i class="fa fa-instagram"></i>
						</a>

						<a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
							<i class="fa fa-pinterest-p"></i>
						</a>
					</div>
				</div>

				<div class="col-sm-6 col-lg-3 p-b-50">
					<h4 class="stext-301 cl0 p-b-30">
						Newsletter
					</h4>

					<form>
						<div class="wrap-input1 w-full p-b-4">
							<input class="input1 bg-none plh1 stext-107 cl7" type="text" name="email" placeholder="email@example.com">
							<div class="focus-input1 trans-04"></div>
						</div>

						<div class="p-t-18">
							<button class="flex-c-m stext-101 cl0 size-103 bg1 bor1 hov-btn2 p-lr-15 trans-04">
								Subscribe
							</button>
						</div>
					</form>
				</div>
			</div>

			<div class="p-t-40">
				<div class="flex-c-m flex-w p-b-18">
					<a href="#" class="m-all-1">
						<img src="images/icons/icon-pay-01.png" alt="ICON-PAY">
					</a>

					<a href="#" class="m-all-1">
						<img src="images/icons/icon-pay-02.png" alt="ICON-PAY">
					</a>

					<a href="#" class="m-all-1">
						<img src="images/icons/icon-pay-03.png" alt="ICON-PAY">
					</a>

					<a href="#" class="m-all-1">
						<img src="images/icons/icon-pay-04.png" alt="ICON-PAY">
					</a>

					<a href="#" class="m-all-1">
						<img src="images/icons/icon-pay-05.png" alt="ICON-PAY">
					</a>
				</div>

				<p class="stext-107 cl6 txt-center">
					<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | Made with <i class="fa fa-heart-o" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a> &amp; distributed by <a href="https://themewagon.com" target="_blank">ThemeWagon</a>
<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->

				</p>
			</div>
		</div>
	</footer>


	<!-- Back to top -->
	<div class="btn-back-to-top" id="myBtn">
		<span class="symbol-btn-back-to-top">
			<i class="zmdi zmdi-chevron-up"></i>
		</span>
	</div>

<!--===============================================================================================-->	
	<script src="vendor/jquery/jquery-3.2.1.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/animsition/js/animsition.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/bootstrap/js/popper.js"></script>
	<script src="vendor/bootstrap/js/bootstrap.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/select2/select2.min.js"></script>
	<script>
		$(".js-select2").each(function(){
			$(this).select2({
				minimumResultsForSearch: 20,
				dropdownParent: $(this).next('.dropDownSelect2')
			});
		})
	</script>
<!--===============================================================================================-->
	<script src="vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
	<script>
		$('.js-pscroll').each(function(){
			$(this).css('position','relative');
			$(this).css('overflow','hidden');
			var ps = new PerfectScrollbar(this, {
				wheelSpeed: 1,
				scrollingThreshold: 1000,
				wheelPropagation: false,
			});

			$(window).on('resize', function(){
				ps.update();
			})
		});
	</script>
<!--===============================================================================================-->
	<script src="js/main.js"></script>

</body>
</html>



<script>
	document.addEventListener('DOMContentLoaded', function() {
		// Function to update subtotal and total
		function updateTotals() {
			let subTotal = 0;

			// Iterate through each product
			document.querySelectorAll('.row-main').forEach(product => {
				let regularPrice = parseInt(product.querySelector('.regularPrice').textContent);
				let quantity = parseInt(product.querySelector('.num-product').value);

				// Calculate subtotal for each product
				let subTotalProduct = regularPrice * quantity;
			product.querySelector('.subTotalRegularPrice').textContent = subTotalProduct.toFixed(0);

				// Add subtotal for each product to overall subtotal
				subTotal += subTotalProduct;
			});

			// Update subtotal display
			document.getElementById('subTotal').textContent =  subTotal.toFixed(0);

	
	// Function to update #inside and #outside values based on conditions
    function updateDeliveryValues() {
        var subTotal = parseFloat(document.getElementById('subTotal').textContent);
        console.log("Total value:", subTotal); // Log total value to check if it's correctly retrieved

        var rowMainElements = document.querySelectorAll('.row-main');
        if (rowMainElements.length > 1) {
            if (subTotal > 5000) {
                console.log("Setting #inside and #outside to 0");
                document.getElementById('inside').value = '0';
                document.getElementById('outside').value = '0';
            } else if (subTotal > 2500) {
                console.log("Setting #inside to 0 and #outside to 120");
                document.getElementById('inside').value = '0';
                document.getElementById('outside').value = '120';
            } else {
                console.log("Setting #inside to 60 and #outside to 120");
                document.getElementById('inside').value = '60';
                document.getElementById('outside').value = '120';
            }
        } else if (rowMainElements.length === 1) {
            var insideValue = parseFloat(document.querySelector('.delivery-inside').textContent.trim());
            var outsideValue = parseFloat(document.querySelector('.delivery-outside').textContent.trim());
       
			console.log("Inside value:", insideValue); // Log inside value to check if it's correctly retrieved
            console.log("Outside value:", outsideValue); // Log outside value to check if it's correctly retrieved

            document.getElementById('inside').value = insideValue;
            document.getElementById('outside').value = outsideValue;
        }

        // Update #shipping based on checkboxes and #inside value
        var shippingValue = 0;
        if (document.getElementById('inside').checked) {
            shippingValue = parseFloat(document.getElementById('inside').value);
        } else if (document.getElementById('outside').checked) {
            shippingValue = parseFloat(document.getElementById('outside').value);
        }
        console.log("Shipping value:", shippingValue);

        // Update #shipping input
        document.getElementById('shipping').textContent = shippingValue;

        // Update total amount based on subtotal and shipping value
        var totalAmount = subTotal + shippingValue;
        document.getElementById('total').textContent = totalAmount;

        // Show/hide #shipping and #free-delivery based on #shipping value
        var shippingInput = document.getElementById('shipping');
        var freeDeliveryElement = document.getElementById('free-delivery');
        if (shippingValue === 0) {
            console.log("Free shipping");
            shippingInput.style.display = 'none';
            freeDeliveryElement.style.display = 'block';
        } else {
            console.log("Showing #shipping, hiding #free-delivery");
            shippingInput.style.display = 'block';
            freeDeliveryElement.style.display = 'none';
        }
    }

    // Initial call to set values based on initial #total value
    updateDeliveryValues();

    // Event listeners for changes in #inside and #outside checkboxes
    var insideCheckbox = document.getElementById('inside');
    var outsideCheckbox = document.getElementById('outside');

	insideCheckbox.addEventListener('change', function() {
        updateDeliveryValues();
    });
    outsideCheckbox.addEventListener('change', function() {
        updateDeliveryValues();
    });
	
	
	
	
	
		}
	// Event delegation for close-icon clicks
document.addEventListener('click', function(event) {
if (event.target.classList.contains('close-icon')) {
// Find the product ID associated with the clicked close icon
let productId = event.target.closest('.row-main').getAttribute('data-product-id');
console.log(productId)

// Simulate AJAX request to delete product (replace with actual AJAX request)
$.ajax({
url: '/add-to-cart-remove',
method: 'POST',
data: { id: productId }, // Send 'id' instead of 'productId' in the request body
success: function(response) {
console.log('Cart item removed successfully:', response);

$('[data-product-id="' + productId + '"]').closest('.row-main').fadeOut('fast', function() {
	$(this).remove(); // Remove the element after fade out
		
// Optionally update any totals or calculations
updateTotals();	
});            
},
error: function(xhr, status, error) {
console.error('Error removing cart item:', error);
}
});
updateTotals();
}
});

		

	// Event listener for input changes in num-product fields
document.querySelectorAll('.num-product').forEach(input => {
input.addEventListener('input', function(event) {
let closestRowMain = input.closest('.row-main');
let closestQuantity = closestRowMain.querySelector('.num-product').value;
let closestProductId = closestRowMain.getAttribute('data-product-id');

$.ajax({
url: '/add-to-cart', // Adjust URL as per your server endpoint
method: 'POST',
data: { id: closestProductId, quantity: closestQuantity },
success: function(response) {
console.log('Product quantity updated successfully:', response);
updateTotals(); // Update totals after successful update
},
error: function(xhr, status, error) {
console.error('Error updating product quantity:', error);
// Handle error scenario if needed
}
});
});
});

		// Event listener for increment button click
		document.querySelectorAll('.btn-num-product-up').forEach(button => {
			button.addEventListener('click', function(event) {

				let closestRowMain = button.closest('.row-main');
		let closestQuantity = closestRowMain.querySelector('.num-product').value;
		let closestProductId = closestRowMain.getAttribute('data-product-id');
		
		$.ajax({
			url: '/add-to-cart', // Adjust URL as per your server endpoint
			method: 'POST',
			data: { id: closestProductId, quantity: closestQuantity },
			success: function(response) {
				console.log('Product quantity updated successfully:', response);
				updateTotals(); // Update totals after successful update
			},
			error: function(xhr, status, error) {
				console.error('Error updating product quantity:', error);
				// Handle error scenario if needed
			}
		});



			});
		});

		// Event listener for decrement button click
		document.querySelectorAll('.btn-num-product-down').forEach(button => {
			button.addEventListener('click', function(event) {
				let closestRowMain = button.closest('.row-main');
				let closestQuantity = closestRowMain.querySelector('.num-product').value;
				let closestProductId = closestRowMain.getAttribute('data-product-id');
				
				$.ajax({
					url: '/add-to-cart', // Adjust URL as per your server endpoint
					method: 'POST',
					data: { id: closestProductId, quantity: closestQuantity },
					success: function(response) {
						console.log('Product quantity updated successfully:', response);
						updateTotals(); // Update totals after successful update
					},
					error: function(xhr, status, error) {
						console.error('Error updating product quantity:', error);
						// Handle error scenario if needed
					}
				});
			

			});
		});

		// Initial update of totals when the page loads
		updateTotals();
	});

	// Select all input elements on the page
let allInputs = document.querySelectorAll('.num-product');

// Loop through each input element
allInputs.forEach(function(input) {
// Add event listener for 'input' event
input.addEventListener('input', function() {
// Get the current value of the input field
let value = parseInt(input.value);

// Check if the value is 0 or negative
if (value <= 0 || isNaN(value)) {
// Set the value to 1 if it's 0 or negative
input.value = 0;
}
});
});

</script>
	


<script>
    $(document).ready(function() {
        function constructOrderObject() {
            let order = {
                products: [],
                subTotal: parseFloat($('#subTotal').text()),
                shippingCost: parseFloat($('#shipping').text()),
                totalAmount: parseFloat($('#total').text()),
                billingAddress: {
                    name: $('input[name="name"]').val(),
                    mobileNumber: $('input[name="phone"]').val(),
                    address: $('input[name="address"]').val(),
                },
                paymentMethod: $('input[name="payment"]:checked').val(), // Corrected assignment
                userNotes: $('input[name="user-notes"]').val(),
                paymentStatus: "pending",
                deliveryStatus: "pending",
            };

            // Loop through each product entry and add to order products array
            $('.row-main').each(function(index) {
                let productId = $(this).find('.product-id').text();
                let productName = $(this).find('.product-name').text();
                let metaData = $(this).find('.product-metaData').text();
                let productImage = $(this).find('.product-image').text();
                let color = $(this).find('.product-color').text();
                let quantity = parseInt($(this).find('.num-product').val(), 10); // Ensure to specify radix 10 for parseInt
                let sellingPrice = parseFloat($(this).find('.regularPrice').text());
                let totalSellingPrice = parseFloat($(this).find('.subTotalRegularPrice').text());
                order.products.push({
                    id: productId,
                    name: productName,
                    metaData: metaData,
					productImage: productImage,
                    color: color,
                    quantity: quantity,
                    sellingPrice: sellingPrice,
                    totalSellingPrice: totalSellingPrice,
                });
            });

            return order;
        }

        // Handle form submission
        $('#submitOrder').click(function(event) {
            event.preventDefault();
			 // Clear previous error messages
			 $('.main-error').hide();

			// Validate form fields
			let isValid = true;

			if ($('input[name="name"]').val().trim() === '' ||
                $('input[name="phone"]').val().trim() === '' ||
                $('input[name="address"]').val().trim() === '') {
                
                // Show main error message
                $('.main-error').show();
                
                // Calculate scroll position to center the error message
                let windowHeight = $(window).height();
                let errorHeight = $('.main-error').outerHeight();
                let scrollPosition = $('.main-error').offset().top - (windowHeight / 3 - errorHeight / 2);

                // Scroll to center of error message
                $('html, body').animate({
                    scrollTop: scrollPosition
                }, 1000); // Smooth scroll duration

                return;
			}



            // Construct order object
            let order = constructOrderObject();
            console.log(order);

            // Send order data to server
            $.ajax({
                url: '/order-confirmation', // Assuming this is the route you defined in Express
                method: 'POST',
                data: order,
                success: function(response) {
                    console.log('Order submitted successfully');
                    // Redirect to success page
					window.location.href = `/order-confirmation/${response.order._id}`;
                },
                error: function(xhr, status, error) {
                    console.error('Error submitting order:', error);
                    // Optionally show an error message to the user
                    alert('Failed to submit order. Please try again.');
                }
            });
        });
    });
</script>
